{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Roda et al_tips\"\noutput:\n  pdf_document: default\n  html_document: default\n---\ninstall.packages(\"zoo\")\n\n#Tips for the Roda et al data:\n\n```{r}\n#Getting started:\nlibrary(ggplot2)\nroda<-read.csv(\"data/Fst_BSA_wLinkageGrp.csv\", header=T)\nhead(roda) #will show you the first 5 rows of each column in the dataset\nroda<-roda[order(roda$LinkageGroup, roda$LinkageGroup_Position),]\n#We want to look at each linkage group at a time:\nrd<-split(roda, roda$LinkageGroup)\n```\n\n```{r}\n#mapping all values:\nplot(rd$GR1$LinkageGroup_Position, rd$GR1$Fst)\n\n#it's really hard to see what's going on here- just looks like a big block of data. Let's try creating 'windows' (which is a moving average for a 'window' of snps)\n\n#we have to call our windowing function \"SWsnp\"\nlibrary(zoo)\nSWsnp = function(x,y,z){\n  out<-rollapply(as.numeric(x),width=y,mean,by= z, na.rm=TRUE)\n}\n```\n\n\n\n```{r}\n#the window size can be somewhat arbitrary- it will depend on how many SNPs you have. Making bigger windows can reduce noise, but also lose signal of a true trend. Let's try 20 SNPs, with a 'step size' of 2.\nLG1_pos<-SWsnp(rd$GR1$LinkageGroup_Position, 20,2)\nLG1_Fst<-SWsnp(rd$GR1$Fst, 20,2)\nLG1_LG<-rep(\"LG1\",length(LG1_pos))\n\nLG2_pos<-SWsnp(rd$GR2$LinkageGroup_Position, 20,2)\nLG2_Fst<-SWsnp(rd$GR2$Fst, 20,2)\nLG2_LG<-rep(\"LG2\",length(LG2_pos))\n\nLG3_pos<-SWsnp(rd$GR3$LinkageGroup_Position, 20,2)\nLG3_Fst<-SWsnp(rd$GR3$Fst, 20,2)\nLG3_LG<-rep(\"LG3\",length(LG3_pos))\n\nLG4_pos<-SWsnp(rd$GR4$LinkageGroup_Position, 20,2)\nLG4_Fst<-SWsnp(rd$GR4$Fst, 20,2)\nLG4_LG<-rep(\"LG4\",length(LG4_pos))\n\nLG5_pos<-SWsnp(rd$GR5$LinkageGroup_Position, 20,2)\nLG5_Fst<-SWsnp(rd$GR5$Fst, 20,2)\nLG5_LG<-rep(\"LG5\",length(LG5_pos))\n\nLG6_pos<-SWsnp(rd$GR6$LinkageGroup_Position, 20,2)\nLG6_Fst<-SWsnp(rd$GR6$Fst, 20,2)\nLG6_LG<-rep(\"LG6\",length(LG6_pos))\n\nLG7_pos<-SWsnp(rd$GR7$LinkageGroup_Position, 20,2)\nLG7_Fst<-SWsnp(rd$GR7$Fst, 20,2)\nLG7_LG<-rep(\"LG7\",length(LG7_pos))\n\nLG8_pos<-SWsnp(rd$GR8$LinkageGroup_Position, 20,2)\nLG8_Fst<-SWsnp(rd$GR8$Fst, 20,2)\nLG8_LG<-rep(\"LG8\",length(LG8_pos))\n\nLG9_pos<-SWsnp(rd$GR9$LinkageGroup_Position, 20,2)\nLG9_Fst<-SWsnp(rd$GR9$Fst, 20,2)\nLG9_LG<-rep(\"LG9\",length(LG9_pos))\n\nLG10_pos<-SWsnp(rd$GR10$LinkageGroup_Position, 20,2)\nLG10_Fst<-SWsnp(rd$GR10$Fst, 20,2)\nLG10_LG<-rep(\"LG10\",length(LG10_pos))\n\nLG11_pos<-SWsnp(rd$GR11$LinkageGroup_Position, 20,2)\nLG11_Fst<-SWsnp(rd$GR11$Fst, 20,2)\nLG11_LG<-rep(\"LG11\",length(LG11_pos))\n\nLG12_pos<-SWsnp(rd$GR12$LinkageGroup_Position, 20,2)\nLG12_Fst<-SWsnp(rd$GR12$Fst, 20,2)\nLG12_LG<-rep(\"LG12\",length(LG12_pos))\n\nLG13_pos<-SWsnp(rd$GR13$LinkageGroup_Position, 20,2)\nLG13_Fst<-SWsnp(rd$GR13$Fst, 20,2)\nLG13_LG<-rep(\"LG13\",length(LG13_pos))\n\nLG14_pos<-SWsnp(rd$GR14$LinkageGroup_Position, 20,2)\nLG14_Fst<-SWsnp(rd$GR14$Fst, 20,2)\nLG14_LG<-rep(\"LG14\",length(LG14_pos))\n\nLG15_pos<-SWsnp(rd$GR15$LinkageGroup_Position, 20,2)\nLG15_Fst<-SWsnp(rd$GR15$Fst, 20,2)\nLG15_LG<-rep(\"LG15\",length(LG15_pos))\n\nLG16_pos<-SWsnp(rd$GR16$LinkageGroup_Position, 20,2)\nLG16_Fst<-SWsnp(rd$GR16$Fst, 20,2)\nLG16_LG<-rep(\"LG16\",length(LG16_pos))\n\nLG17_pos<-SWsnp(rd$GR17$LinkageGroup_Position, 20,2)\nLG17_Fst<-SWsnp(rd$GR17$Fst, 20,2)\nLG17_LG<-rep(\"LG1\",length(LG17_pos))\n\nLG18_pos<-SWsnp(rd$GR18$LinkageGroup_Position, 20,2)\nLG18_Fst<-SWsnp(rd$GR18$Fst, 20,2)\nLG18_LG<-rep(\"LG1\",length(LG18_pos))\n\nLG19_pos<-SWsnp(rd$GR19$LinkageGroup_Position, 20,2)\nLG19_Fst<-SWsnp(rd$GR19$Fst, 20,2)\nLG19_LG<-rep(\"LG1\",length(LG19_pos))\n\nLG20_pos<-SWsnp(rd$GR20$LinkageGroup_Position, 20,2)\nLG20_Fst<-SWsnp(rd$GR20$Fst, 20,2)\nLG20_LG<-rep(\"LG1\",length(LG20_pos))\n```\n\n\n\n```{r}\n#putting all the windowed values back in 1 dataframe:\nLG_names<-rbind(LG1_LG, LG2_LG, LG3_LG, LG4_LG, LG5_LG, LG6_LG, LG7_LG, LG8_LG, LG9_LG, LG10_LG, LG11_LG, LG12_LG, LG13_LG, LG14_LG, LG15_LG, LG16_LG, LG17_LG, LG18_LG, LG19_LG, LG20_LG)\n\n\nLG_pos<-rbind(LG1_pos, LG2_pos, LG3_pos, LG4_pos, LG5_pos, LG6_pos, LG7_pos, LG8_pos, LG9_pos, LG10_pos, LG11_pos, LG12_pos, LG13_pos, LG14_pos, LG15_pos, LG16_pos, LG17_pos, LG18_pos, LG19_pos, LG20_pos)\n\nLG_fst<-rbind(LG1_Fst, LG2_Fst, LG3_Fst, LG4_Fst, LG5_Fst, LG6_Fst, LG7_Fst, LG8_Fst, LG9_Fst, LG10_Fst, LG11_Fst, LG12_Fst, LG13_Fst, LG14_Fst, LG15_Fst, LG16_Fst, LG17_Fst, LG18_Fst, LG19_Fst, LG20_Fst)\n\nLG_names<-as.vector(LG_names)\nLG_pos<-as.vector(LG_pos)\nLG_fst<-as.vector(LG_fst)\n\ndata<-cbind(LG_names, LG_pos, LG_fst)\ndata<-as.data.frame(data)\n```\n\n\n\n```{r}\n# we've coerced the data a few times, so we need to reformat our numeric data in order for it to plot in ggplot\n\n\ndata[[2]] <- as.numeric(as.character(data[[2]]))\ndata[[3]] <- as.numeric(as.character(data[[3]]))\n\n#Let's plot it now:\nggplot(data, aes(x=LG_pos, y=LG_fst))+geom_point()+facet_wrap(~LG_names)\n\n#lets plot some high Fst values in another color. We'll use 0.65 as a cutoff\ndata$col <- cut(data$LG_fst,\n               breaks = c(-Inf, 0.65, Inf),\n               labels = c(\"<=0.65\", \">0.65\"))\nggplot(data, aes(x=LG_pos, y=LG_fst, color=col))+ geom_point()+facet_wrap(~LG_names)+scale_color_manual(values=c(\"black\", \"red\"))+theme_bw()\n\n# try plotting another variable- perhaps the outlier status!\n# try plotting the different comparisons\n# Want to plot something totally different? feel free to change everything, as long as you think it tells a story!\n\n# \n```\n",
    "created" : 1508442698553.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1249435089",
    "id" : "D67AE4A7",
    "lastKnownWriteTime" : 1508444440,
    "last_content_update" : 1508444441009,
    "path" : "~/code/490bio/lab3/tutorial for_Roda BSA data.Rmd",
    "project_path" : "tutorial for_Roda BSA data.Rmd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}